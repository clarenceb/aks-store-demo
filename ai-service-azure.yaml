apiVersion: v1
data:
  AZURE_OPENAI_DEPLOYMENT_NAME: gpt-35-turbo
  AZURE_OPENAI_ENDPOINT: https://<your-aoai-name>.openai.azure.com/
  USE_AZURE_AD: "True"
  USE_AZURE_OPENAI: "True"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: demo
    meta.helm.sh/release-namespace: pets
  labels:
    app.kubernetes.io/managed-by: Helm
  name: ai-service-configmap
  namespace: pets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: demo
    meta.helm.sh/release-namespace: pets
  labels:
    app.kubernetes.io/managed-by: Helm
  name: ai-service
  namespace: pets
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ai-service
        azure.workload.identity/use: "true"
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: ai-service-configmap
        image: ghcr.io/azure-samples/aks-store-demo/ai-service:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 5001
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 3
        name: order-service
        ports:
        - containerPort: 5001
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 5001
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 30m
            memory: 85Mi
          requests:
            cpu: 20m
            memory: 50Mi
        startupProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 5001
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
